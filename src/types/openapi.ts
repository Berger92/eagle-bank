/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Authenticate a user and return a JWT token */
        post: operations["login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List accounts */
        get: operations["listAccounts"];
        put?: never;
        /** @description Create a new bank account */
        post: operations["createAccount"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/accounts/{accountNumber}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Fetch account by account number. */
        get: operations["fetchAccountByAccountNumber"];
        put?: never;
        post?: never;
        /** @description Delete account by account number. */
        delete: operations["deleteAccountByAccountNumber"];
        options?: never;
        head?: never;
        /** @description Update account by account number. */
        patch: operations["updateAccountByAccountNumber"];
        trace?: never;
    };
    "/v1/accounts/{accountNumber}/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List transactions */
        get: operations["listAccountTransaction"];
        put?: never;
        /** @description Create a transaction */
        post: operations["createTransaction"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/accounts/{accountNumber}/transactions/{transactionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Fetch transaction by ID. */
        get: operations["fetchAccountTransactionByID"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Create a new user */
        post: operations["createUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/{userId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Fetch user by ID. */
        get: operations["fetchUserByID"];
        put?: never;
        post?: never;
        /** @description Delete user by ID. */
        delete: operations["deleteUserByID"];
        options?: never;
        head?: never;
        /** @description Update user by ID. */
        patch: operations["updateUserByID"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        LoginRequest: {
            username: string;
            /** Format: password */
            password: string;
        };
        LoginResponse: {
            /** @description JWT token */
            accessToken: string;
        };
        CreateBankAccountRequest: {
            name: string;
            /** @enum {string} */
            accountType: "personal";
        };
        UpdateBankAccountRequest: {
            name?: string;
            /** @enum {string} */
            accountType?: "personal";
        };
        ListBankAccountsResponse: {
            accounts: components["schemas"]["BankAccountResponse"][];
        };
        BankAccountResponse: {
            /** Format: ^01\d{6}$ */
            accountNumber: string;
            /** @enum {string} */
            sortCode: "10-10-10";
            name: string;
            /** @enum {string} */
            accountType: "personal";
            /**
             * Format: double
             * @description Currency amount with up to two decimal places
             */
            balance: number;
            /** @enum {string} */
            currency: "GBP";
            /** Format: date-time */
            createdTimestamp: string;
            /** Format: date-time */
            updatedTimestamp: string;
        };
        CreateTransactionRequest: {
            /**
             * Format: double
             * @description Currency amount with up to two decimal places
             */
            amount: number;
            /** @enum {string} */
            currency: "GBP";
            /** @enum {string} */
            type: "deposit" | "withdrawal";
            reference?: string;
        };
        ListTransactionsResponse: {
            transactions: components["schemas"]["TransactionResponse"][];
        };
        TransactionResponse: {
            id: string;
            /** Format: double */
            amount: number;
            /** @enum {string} */
            currency: "GBP";
            /** @enum {string} */
            type: "deposit" | "withdrawal";
            reference?: string;
            /** Format: ^usr-[A-Za-z0-9]+$ */
            userId?: string;
            /** Format: date-time */
            createdTimestamp: string;
        };
        CreateUserRequest: {
            name: string;
            address: {
                line1: string;
                line2?: string;
                line3?: string;
                town: string;
                county: string;
                postcode: string;
            };
            /** Format: ^\+[1-9]\d{1,14}$ */
            phoneNumber: string;
            /** Format: email */
            email: string;
        };
        UpdateUserRequest: {
            name?: string;
            address?: {
                line1: string;
                line2?: string;
                line3?: string;
                town: string;
                county: string;
                postcode: string;
            };
            /** Format: ^\+[1-9]\d{1,14}$ */
            phoneNumber?: string;
            /** Format: email */
            email?: string;
        };
        UserResponse: {
            /** Format: ^usr-[A-Za-z0-9]+$ */
            id: string;
            name: string;
            address: {
                line1: string;
                line2?: string;
                line3?: string;
                town: string;
                county: string;
                postcode: string;
            };
            /** Format: ^\+[1-9]\d{1,14}$ */
            phoneNumber: string;
            /** Format: email */
            email: string;
            /** Format: date-time */
            createdTimestamp: string;
            /** Format: date-time */
            updatedTimestamp: string;
        };
        ErrorResponse: {
            message: string;
        };
        BadRequestErrorResponse: {
            message: string;
            details: {
                field: string;
                message: string;
                type: string;
            }[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Login with username and password */
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginRequest"];
            };
        };
        responses: {
            /** @description Successful login */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoginResponse"];
                };
            };
            /** @description Invalid credentials */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description An unexpected error occurred */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listAccounts: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The list of bank accounts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ListBankAccountsResponse"];
                };
            };
            /** @description Access token is missing or invalid */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description An unexpected error occurred */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createAccount: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Create a new bank account for the user */
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateBankAccountRequest"];
            };
        };
        responses: {
            /** @description Bank Account has been created successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BankAccountResponse"];
                };
            };
            /** @description Invalid details supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorResponse"];
                };
            };
            /** @description Access token is missing or invalid */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description The user is not allowed to access the transaction */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description An unexpected error occurred */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    fetchAccountByAccountNumber: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Account number of the bank account */
                accountNumber: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The bank account details */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BankAccountResponse"];
                };
            };
            /** @description The request didn't supply all the necessary data */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorResponse"];
                };
            };
            /** @description The user was not authenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description The user is not allowed to access the bank account details */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Bank account was not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description An unexpected error occurred */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAccountByAccountNumber: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Account number of the bank account */
                accountNumber: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The bank account has been deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request didn't supply all the necessary data */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorResponse"];
                };
            };
            /** @description Access token is missing or invalid */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description The user is not allowed to delete the bank account details */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Bank account was not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description An unexpected error occurred */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    updateAccountByAccountNumber: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Account number of the bank account */
                accountNumber: string;
            };
            cookie?: never;
        };
        /** @description Update bank account details for the user */
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateBankAccountRequest"];
            };
        };
        responses: {
            /** @description The updated bank account details */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BankAccountResponse"];
                };
            };
            /** @description The request didn't supply all the necessary data */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorResponse"];
                };
            };
            /** @description Access token is missing or invalid */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description The user is not allowed to update the bank account details */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Bank account was not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description An unexpected error occurred */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listAccountTransaction: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Account number of the bank account */
                accountNumber: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The list of transaction details */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ListTransactionsResponse"];
                };
            };
            /** @description The request didn't supply all the necessary data */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorResponse"];
                };
            };
            /** @description Access token is missing or invalid */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description The user is not allowed to access the transactions */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Bank account was not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description An unexpected error occurred */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createTransaction: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Account number of the bank account */
                accountNumber: string;
            };
            cookie?: never;
        };
        /** @description Create a new transaction */
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateTransactionRequest"];
            };
        };
        responses: {
            /** @description Transaction has been created successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TransactionResponse"];
                };
            };
            /** @description Invalid details supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorResponse"];
                };
            };
            /** @description Access token is missing or invalid */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description The user is not allowed to delete the bank account details */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Bank account was not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Insufficient funds to process transaction */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description An unexpected error occurred */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    fetchAccountTransactionByID: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Account number of the bank account */
                accountNumber: string;
                /** @description ID of the transaction */
                transactionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The transaction details */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TransactionResponse"];
                };
            };
            /** @description The request didn't supply all the necessary data */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorResponse"];
                };
            };
            /** @description Access token is missing or invalid */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description The user is not allowed to access the transaction */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Bank account was not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description An unexpected error occurred */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Create a new user */
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUserRequest"];
            };
        };
        responses: {
            /** @description User has been created successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
            /** @description Invalid details supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description An unexpected error occurred */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    fetchUserByID: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description ID of the user */
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The user details */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
            /** @description The request didn't supply all the necessary data */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorResponse"];
                };
            };
            /** @description Access token is missing or invalid */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description The user is not allowed to access the transaction */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description User was not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description An unexpected error occurred */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteUserByID: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description ID of the user */
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The user has been deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The request didn't supply all the necessary data */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorResponse"];
                };
            };
            /** @description Access token is missing or invalid */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description The user is not allowed to access the transaction */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description User was not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description A user cannot be deleted when they are associated with a bank account */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description An unexpected error occurred */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    updateUserByID: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description ID of the user */
                userId: string;
            };
            cookie?: never;
        };
        /** @description Update user details */
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateUserRequest"];
            };
        };
        responses: {
            /** @description The updated user details */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
            /** @description The request didn't supply all the necessary data */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorResponse"];
                };
            };
            /** @description Access token is missing or invalid */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description The user is not allowed to access the transaction */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description User was not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description An unexpected error occurred */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
}
